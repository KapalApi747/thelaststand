<?php

namespace App\Livewire\Tenant\Frontend\Customers;

use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rule;
use Livewire\Attributes\Layout;
use Livewire\Component;

#[Layout('t-shop-layout')]
class CustomerProfile extends Component
{
    public $name;
    public $email;
    public $phone;
    public $password;
    public $password_confirmation;

    public $billingAddress = [
        'address_line1' => '',
        'address_line2' => '',
        'city' => '',
        'state' => '',
        'zip' => '',
        'country' => '',
    ];

    public $shippingAddress = [
        'address_line1' => '',
        'address_line2' => '',
        'city' => '',
        'state' => '',
        'zip' => '',
        'country' => '',
    ];

    public $paymentAccounts = [];

    public function mount()
    {
        $customer = Auth::guard('customer')->user();

        $this->name = $customer->name;
        $this->email = $customer->email;
        $this->phone = $customer->phone;

        // Load addresses by type
        $billing = $customer->addresses()->where('type', 'billing')->first();
        if ($billing) {
            $this->billingAddress = $billing->toArray();
        }

        $shipping = $customer->addresses()->where('type', 'shipping')->first();
        if ($shipping) {
            $this->shippingAddress = $shipping->toArray();
        }

        // Load payment accounts
        $this->paymentAccounts = $customer->paymentAccounts()->get()->toArray();
    }

    protected function rules()
    {
        return [
            'name' => 'required|string|max:255',
            'email' => ['required', 'email', 'max:255', Rule::unique('customers')->ignore(auth('customer')->id())],
            'phone' => 'nullable|string|max:30',
            'password' => 'nullable|string|min:8|confirmed',

            'billingAddress.address_line1' => 'required|string|max:255',
            'billingAddress.address_line2' => 'nullable|string|max:255',
            'billingAddress.city' => 'required|string|max:100',
            'billingAddress.state' => 'nullable|string|max:100',
            'billingAddress.zip' => 'nullable|string|max:20',
            'billingAddress.country' => 'required|string|max:100',

            'shippingAddress.address_line1' => 'required|string|max:255',
            'shippingAddress.address_line2' => 'nullable|string|max:255',
            'shippingAddress.city' => 'required|string|max:100',
            'shippingAddress.state' => 'nullable|string|max:100',
            'shippingAddress.zip' => 'nullable|string|max:20',
            'shippingAddress.country' => 'required|string|max:100',
        ];
    }

    public function save()
    {
        $this->validate();

        $customer = Auth::guard('customer')->user();

        // Update basic info
        $customer->update([
            'name' => $this->name,
            'email' => $this->email,
            'phone' => $this->phone,
        ]);

        // Update password only if filled
        if (!empty($this->password)) {
            $customer->update([
                'password' => Hash::make($this->password),
            ]);
        }

        // Update or create billing address
        $customer->addresses()->updateOrCreate(
            ['type' => 'billing'],
            $this->billingAddress
        );

        // Update or create shipping address
        $customer->addresses()->updateOrCreate(
            ['type' => 'shipping'],
            $this->shippingAddress
        );

        session()->flash('message', 'Profile updated successfully.');
    }

    public function render()
    {
        return view('livewire.tenant.frontend.customers.customer-profile');
    }
}
