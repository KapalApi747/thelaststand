<?php

namespace App\Livewire\Tenant\Frontend\Shopping;

use Livewire\Component;

class CheckoutShipping extends Component
{
    public $shippingMethod = null;
    public $carrier = null;

    public $shippingOptions = [
        'parcel' => [
            'label' => 'Parcel (Standard Shipping)',
            'cost' => 5.00,
            'carriers' => ['PostNL', 'DHL', 'FedEx', 'UPS'],
        ],
        'mail' => [
            'label' => 'Mail (Letter/Small Package)',
            'cost' => 2.50,
            'carriers' => ['PostNL'],
        ],
        'pickup' => [
            'label' => 'Pickup (In-Store Pickup)',
            'cost' => 0.00,
            'carriers' => [],
        ],
        'express' => [
            'label' => 'Express (Faster Parcel Shipping)',
            'cost' => 15.00,
            'carriers' => ['DHL', 'FedEx', 'UPS'],
        ],
        'courier' => [
            'label' => 'Courier (Personal Delivery)',
            'cost' => 25.00,
            'carriers' => ["Yuri's Special Delivery Service"],
        ],
    ];

    protected $rules = [
        'shippingMethod' => 'required|in:parcel,mail,pickup,express,courier',
        'carrier' => 'nullable|string',
    ];

    public function updatedShippingMethod($value)
    {
        if (empty($this->shippingOptions[$value]['carriers'])) {
            $this->carrier = null;
        }
        $this->validateOnly('shippingMethod');
        $this->sendShippingInfo();
    }

    public function updatedCarrier()
    {
        $this->validateOnly('carrier');
        $this->sendShippingInfo();
    }

    public function sendShippingInfo()
    {
        $shippingInfo = [
            'method' => $this->shippingMethod,
            'carrier' => $this->carrier,
            'cost' => $this->shippingMethod ? $this->shippingOptions[$this->shippingMethod]['cost'] : 0,
        ];

        $this->dispatch('shippingUpdated', $shippingInfo);
    }

    public function render()
    {
        return view('livewire.tenant.frontend.shopping.checkout-shipping');
    }
}
