<?php

namespace App\Livewire\Tenant\Frontend\Shopping;

use App\Livewire\Tenant\Frontend\Main\Cart;
use Livewire\Attributes\Layout;
use Livewire\Component;

#[Layout('t-shop-layout')]
class CheckoutPayment extends Component
{
    public $customerInfo = [];
    public $cartTotal = 0;
    public $shippingCost = 0;
    public $taxRate = 0.21;
    public $taxAmount = 0;
    public $grandTotal = 0;

    protected $listeners = ['shippingUpdated'];

    public function mount()
    {
        // Load customer info from session (assuming your checkout form saves it here)
        $this->customerInfo = session('checkout_customer_info', []);

        // You can also load logged-in customer data if needed, fallback to guest info
        if (auth('customer')->check()) {
            $this->customerInfo = array_merge($this->customerInfo, [
                'name' => auth('customer')->user()->name,
                'email' => auth('customer')->user()->email,
            ]);
        }

        $this->cartTotal = $this->retrieveCartTotal();
        $this->calculateTotal();
    }

    public function shippingUpdated($shippingInfo)
    {
        $this->shippingCost = $shippingInfo['cost'] ?? 0;
        $this->calculateTotal();
    }

    protected function calculateTotal()
    {
        $this->grandTotal = $this->cartTotal + $this->shippingCost;
        $this->taxAmount = round($this->grandTotal / 1.21 * $this->taxRate, 2);
    }

    protected function retrieveCartTotal()
    {
        $cart = session()->get('cart_' . tenant()->id, []);
        $total = 0;

        foreach ($cart as $item) {
            $total += $item['price'] * $item['quantity'];
        }

        return $total;
    }

    public function render()
    {
        return view('livewire.tenant.frontend.shopping.checkout-payment')->layout('layouts.app');
    }
}
